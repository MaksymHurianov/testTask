{"version":3,"sources":["gradient/gradient.module.css","gradient/gradientField.module.css","gradient/GradientField.js","gradient/Gradient.js","GradientsList.js","NewGradient.js","EditGradient.js","Routing.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GradientField","style","colorValue","className","s","gradientField","colorFirstValue","colorSecondValue","Gradient","index","colorValues","setColorValues","useState","isClick","setClick","to","gradient","buttonStyle","onClick","console","log","filteredColorValues","forEach","item","i","push","GradientsList","map","width","height","background","NewGradient","setColorFirstValue","setColorSecondValue","setIsClick","isDisabled","setIsDisabled","isFirstInput","setIsFirstInput","isSecondInput","setIsSecondInput","useEffect","validation","firstInput","test","secondInput","gradientStyle","inputStyle","backgroundColor","color","onChange","e","currentTarget","value","undefined","onBlur","disabled","EditGradient","id","useParams","inputFirstValue","setInputFirstValue","inputSecondValue","setInputSecondValue","isAdded","setIsAdded","editGradientStyle","updatedColorValues","Routing","path","exact","render","from","Header","App","ContainerApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9ac237f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradient\":\"gradient_gradient__3xDFG\",\"buttonStyle\":\"gradient_buttonStyle__326x4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientField\":\"gradientField_gradientField__3jNhM\"};","import React from 'react'\r\nimport s from './gradientField.module.css'\r\n\r\nexport function GradientField({style, colorValue}) {\r\n    return (\r\n        <div style={style} className={s.gradientField}>\r\n            <div>{colorValue.colorFirstValue}</div>\r\n            <div>{colorValue.colorSecondValue}</div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {GradientField} from \"./GradientField\";\r\nimport s from './gradient.module.css'\r\n\r\nexport function Gradient({style, colorValue, index, colorValues, setColorValues}) {\r\n    const [isClick, setClick] = useState(false)\r\n\r\n    if (isClick) {\r\n        return <Redirect to={`/edit/${index}`}/>\r\n    }\r\n\r\n    function updateGradientField() {\r\n        setClick((isClick) => !isClick)\r\n    }\r\n\r\n    function deleteGradientField() {\r\n        console.log(index)\r\n        const filteredColorValues = []\r\n        colorValues.forEach(function (item, i) {\r\n\r\n            if (i == index) {\r\n\r\n            } else {\r\n                filteredColorValues.push(item)\r\n            }\r\n            setColorValues(filteredColorValues)\r\n            console.log(item)\r\n            console.log(i)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.gradient}>\r\n            <GradientField style={style} colorValue={colorValue}/>\r\n            <div>\r\n                <button className={s.buttonStyle} onClick={updateGradientField}>edit</button>\r\n            </div>\r\n            <div>\r\n                <button className={s.buttonStyle} onClick={deleteGradientField}>delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Gradient} from \"./gradient/Gradient\";\r\n\r\nexport function GradientsList({colorValues, setColorValues}) {\r\n\r\n    return (\r\n        <div>\r\n            {colorValues.map((colorValue, index) => {\r\n                if(colorValue.colorFirstValue ==''&& colorValue.colorSecondValue == ''){\r\n                    return\r\n                }else{\r\n                    return <Gradient key={index} style={{\r\n                        width: '250px',\r\n                        height: '50px',\r\n                        background: `linear-gradient(to right, ${colorValue.colorFirstValue}, ${colorValue.colorSecondValue})`\r\n                    }} colorValue={colorValue} index={index} setColorValues={setColorValues} colorValues={colorValues}/>\r\n                }\r\n\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {GradientField} from \"./gradient/GradientField\";\r\n\r\nexport function NewGradient({setColorValues}) {\r\n    const [colorFirstValue, setColorFirstValue] = useState('')\r\n    const [colorSecondValue, setColorSecondValue] = useState('')\r\n    const [isClick, setIsClick] = useState(false)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n    const [isFirstInput, setIsFirstInput] = useState(false)\r\n    const [isSecondInput, setIsSecondInput] = useState(false)\r\n\r\n    useEffect(() => validation()\r\n        , [colorFirstValue, colorSecondValue])\r\n\r\n    const validation = () => {\r\n        const firstInput = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(colorFirstValue)\r\n        const secondInput = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(colorSecondValue)\r\n        if (firstInput && secondInput) {\r\n            setIsDisabled(false)\r\n        } else {\r\n            setIsDisabled(true)\r\n        }\r\n    }\r\n\r\n    function changeFirstColor(e) {\r\n        setColorFirstValue(e.currentTarget.value)\r\n        setIsFirstInput(false)\r\n    }\r\n\r\n    function changeSecondColor(e) {\r\n        setColorSecondValue(e.currentTarget.value)\r\n        setIsSecondInput(false)\r\n    }\r\n\r\n    function addGradientField() {\r\n        setColorValues((colorValues) => {\r\n            return [{colorFirstValue, colorSecondValue}, ...colorValues]\r\n        })\r\n        setIsClick((isClick) => {\r\n            return !isClick\r\n        })\r\n\r\n\r\n    }\r\n\r\n    if (isClick) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n    const gradientStyle = {\r\n        width: '300px',\r\n        height: '50px',\r\n        background: `linear-gradient(to right, ${colorFirstValue}, ${colorSecondValue}`\r\n    }\r\n    function blurFirstInput(){\r\n        if(!/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(colorFirstValue)){\r\n            setIsFirstInput(true)\r\n        }else{\r\n            setIsFirstInput(false)\r\n        }\r\n    }\r\n    function blurSecondInput(){\r\n        if(!/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(colorSecondValue)){\r\n            setIsSecondInput(true)\r\n        }else{\r\n            setIsSecondInput(false)\r\n        }\r\n    }\r\n    const inputStyle = {\r\n        backgroundColor: '#d62342',\r\n            color: '#662b0e',\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'inputWrapper'}>\r\n                <input onChange={changeFirstColor} value={colorFirstValue} style={isFirstInput?inputStyle:undefined} onBlur={blurFirstInput} className={'inputStyle'}/>\r\n                <input onChange={changeSecondColor} value={colorSecondValue} style={isSecondInput?inputStyle:undefined} onBlur={blurSecondInput} className={'inputStyle'}/>\r\n            </div>\r\n            <button onClick={addGradientField} disabled={isDisabled} className={'addButton'}>add</button>\r\n            <GradientField style={gradientStyle} colorValue={{colorFirstValue, colorSecondValue}}/>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Redirect, useParams} from \"react-router\";\r\nimport {GradientField} from \"./gradient/GradientField\";\r\nimport './App.css';\r\n\r\nexport function EditGradient({colorValues, setColorValues}) {\r\n\r\n    let {id} = useParams();\r\n\r\n    const [inputFirstValue, setInputFirstValue] = useState(colorValues[id].colorFirstValue)\r\n    const [inputSecondValue, setInputSecondValue] = useState(colorValues[id].colorSecondValue)\r\n    const [isAdded, setIsAdded] = useState(false)\r\n    const [isFirstInput, setIsFirstInput] = useState(false)\r\n    const [isSecondInput, setIsSecondInput] = useState(false)\r\n    const editGradientStyle = {\r\n        width: '300px',\r\n        height: '50px',\r\n        background: `linear-gradient(to right, ${inputFirstValue}, ${colorValues[id].colorSecondValue})`\r\n    }\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    useEffect(() => validation()\r\n        , [inputFirstValue, inputSecondValue])\r\n\r\n\r\n\r\n    function validation() {\r\n        const firstInput = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(inputFirstValue)\r\n        const secondInput = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(inputSecondValue)\r\n        if (firstInput && secondInput) {\r\n            setIsDisabled(false)\r\n        } else {\r\n            setIsDisabled(true)\r\n        }\r\n    }\r\n\r\n    if (isAdded) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    function changeFirstValue(e) {\r\n        setInputFirstValue(e.currentTarget.value)\r\n        setIsFirstInput(false)\r\n    }\r\n\r\n    function changeSecondValue(e) {\r\n        setInputSecondValue(e.currentTarget.value)\r\n        setIsSecondInput(false)\r\n    }\r\n\r\n    function addUpdatedGradientField() {\r\n\r\n        const updatedColorValues = []\r\n        colorValues.forEach(function (item, i) {\r\n\r\n            if (i == id) {\r\n                updatedColorValues.push({colorFirstValue: inputFirstValue, colorSecondValue: inputSecondValue})\r\n            } else {\r\n                updatedColorValues.push(colorValues[i])\r\n            }\r\n        });\r\n        setColorValues(updatedColorValues)\r\n        setIsAdded(isAdded => !isAdded)\r\n    }\r\n    function blurFirstInput(){\r\n        if(!/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(inputFirstValue)){\r\n            setIsFirstInput(true)\r\n        }else{\r\n            setIsFirstInput(false)\r\n        }\r\n    }\r\n    function blurSecondInput(){\r\n        if(!/^#([0-9a-f]{3}|[0-9a-f]{6})$/i.test(inputSecondValue)){\r\n            setIsSecondInput(true)\r\n        }else{\r\n            setIsSecondInput(false)\r\n        }\r\n    }\r\n    const inputStyle = {\r\n        backgroundColor: '#d62342',\r\n        color: '#662b0e',\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={'inputWrapper'}>\r\n                <input onChange={changeFirstValue} value={inputFirstValue} style={isFirstInput?inputStyle:undefined} onBlur={blurFirstInput} className={'inputStyle'}/>\r\n                <input onChange={changeSecondValue} value={inputSecondValue} style={isSecondInput?inputStyle:undefined} onBlur={blurSecondInput} className={'inputStyle'}/>\r\n            </div>\r\n            <button onClick={addUpdatedGradientField} disabled={isDisabled} className={'addButton'}>Add</button>\r\n            <GradientField\r\n                style={editGradientStyle}\r\n                colorValue={{colorFirstValue: inputFirstValue, colorSecondValue: inputSecondValue}}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {GradientsList} from \"./GradientsList\";\r\nimport {NewGradient} from \"./NewGradient\";\r\nimport {EditGradient} from \"./EditGradient\";\r\n\r\nexport function Routing() {\r\n\r\n    const [colorValues, setColorValues] = useState([{\r\n        colorFirstValue:'',\r\n        colorSecondValue:''\r\n    }])\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" exact\r\n                       render={() => <GradientsList colorValues={colorValues} setColorValues={setColorValues}/>}/>\r\n                <Route path=\"/new\" exact render={() => <NewGradient setColorValues={setColorValues}/>}/>\r\n                <Route path=\"/edit/:id\" exact\r\n                       render={() => <EditGradient colorValues={colorValues} setColorValues={setColorValues}/>}/>\r\n                <Route path={'/404'}\r\n                        render={() => <h1>404: PAGE NOT FOUND</h1>}  />\r\n                <Redirect from={ '*' } to={'/404'}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <ul className={'header'}>\r\n            <li><NavLink to={'/'}>Home</NavLink></li>\r\n            <li><NavLink to={'/new'}>Create</NavLink></li>\r\n        </ul>\r\n    )\r\n}","import './App.css';\nimport React from 'react'\nimport {Routing} from \"./Routing\";\nimport {Header} from \"./Header\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className={'App'}>\n            <Header/>\n            <Routing/>\n        </div>\n    );\n}\n\nconst ContainerApp = () => {\n    return <HashRouter>\n    {/*<BrowserRouter>*/}\n        <App/>\n    {/*</BrowserRouter>*/}\n        </HashRouter>\n}\nexport default ContainerApp\n//export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport ContainerApp from \"./App\";\n\nReactDOM.render(\n  // // <React.StrictMode>\n  //     <BrowserRouter>\n  //   <App />\n  //     </BrowserRouter>\n  // // </React.StrictMode>\n    <ContainerApp/>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}